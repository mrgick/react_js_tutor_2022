{"version":3,"sources":["hooks/useFetchdata.js","routes/Todo/Todo.js","routes/Navbar/Navbar.js","routes/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useFetchdata","operation","arguments","length","undefined","urlApi","useMemo","user","url","Error","setUrlApi","fetch","then","res","json","Todo","props","parsedTodoList","_useState","useState","_useState2","Object","slicedToArray","todoList","setTodoList","_useState3","_useState4","curentPage","setCurentPage","_useState5","_useState6","perPage","setPerPage","endList","beginList","useEffect","react_default","a","createElement","Fragment","col","span","style","margin","list","input","placeholder","onPressEnter","e","defVariable","id","Math","random","title","target","value","completed","concat","toConsumableArray","handlerAddToTodo","slice","map","item","index","Item","key","listStyle","textDecoration","es_checkbox","onChange","todoID","todo","JSON","parse","stringify","filter","handelerTodoChecked","checked","es_button","onClick","handlerDeleteTodo","pagination","defaultCurrent","defaultPageSize","total","page","pageSize","handlerChangePagination","Navbar","name","path","nav","menu","mode","_ref","react_router_dom","to","children","Home","App","basename","Navbar_Navbar","react_router","exact","element","Home_Home","Todo_Todo","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b2fa5472.chunk.js","sourcesContent":["import { useMemo } from \"react\";\n\nexport const useFetchdata = (operation = \"users\", user = \"\") => {\n  const urlApi = useMemo(() => setUrlApi(operation, user));\n\n  function setUrlApi(operation, user) {\n    const url = \"https://jsonplaceholder.typicode.com/\";\n    switch (operation) {\n      case \"todo\":\n        return url + \"todos\";\n      case \"users\":\n        return url + \"users\";\n      default:\n        throw new Error();\n    }\n  }\n\n  return fetch(urlApi).then((res) =>\n    res.json().then((res) => {\n      return res;\n    })\n  );\n};\n","import { Button, Checkbox, List, Col, Input, Pagination } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { useFetchdata } from \"../../hooks/useFetchdata\";\n\nexport const Todo = (props) => {\n  const parsedTodoList = useFetchdata(\"todo\");\n  const [todoList, setTodoList] = useState([]);\n  const [curentPage, setCurentPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const endList = curentPage * perPage;\n  const beginList = endList - perPage;\n\n  useEffect(() => {\n    parsedTodoList.then((res) => setTodoList(res));\n  }, []);\n\n  const handelerTodoChecked = (todoID) => {\n    let todo = JSON.parse(JSON.stringify(todoList));\n\n    todo = todo.filter((item) => {\n      if (item.id === todoID) {\n        item.completed = !item.completed;\n      }\n      return item;\n    });\n    setTodoList(todo);\n  };\n\n  const handlerDeleteTodo = (todoID) => {\n    let todo = JSON.parse(JSON.stringify(todoList));\n\n    todo = todo.filter((item) => {\n      if (item.id !== todoID) return item;\n    });\n    setTodoList(todo);\n  };\n\n  const handlerAddToTodo = (e) => {\n    let defVariable = [\n      { id: Math.random(), title: e.target.value, completed: false },\n    ];\n    setTodoList([...todoList, ...defVariable]);\n  };\n\n  const handlerChangePagination = (page, pageSize) => {\n    setCurentPage(page);\n    setPerPage(pageSize);\n  };\n\n  return (\n    <>\n      <Col span={8} style={{ margin: \"0 auto\" }}>\n        <h3>13</h3>\n        <List>\n          <Input\n            placeholder=\"Добавить todo в список\"\n            onPressEnter={(e) => handlerAddToTodo(e)}\n          />\n          {todoList.slice(beginList, endList).map((item, index) => {\n            return (\n              <List.Item\n                key={index}\n                style={{\n                  listStyle: \"decimal\",\n                  textDecoration: item.completed ? \"line-through\" : \"none\",\n                }}\n              >\n                <Checkbox\n                  onChange={() => handelerTodoChecked(item.id)}\n                  checked={item.completed ? true : false}\n                />\n                {item.title}\n                <Button onClick={() => handlerDeleteTodo(item.id)}>\n                  Удалить\n                </Button>\n              </List.Item>\n            );\n          })}\n          <Pagination\n            defaultCurrent={curentPage}\n            defaultPageSize={perPage}\n            total={todoList.length}\n            onChange={(page, pageSize) =>\n              handlerChangePagination(page, pageSize)\n            }\n          />\n        </List>\n      </Col>\n    </>\n  );\n};\n","import { Menu } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Navbar = (props) => {\n  const [nav, SetNav] = useState([\n    { name: \"Главная\", path: \"/\" },\n    { name: \"Todo List\", path: \"/todo\" },\n    { name: \"Пользователи\", path: \"/users\" },\n    { name: \"Аккаунт\", path: \"/account\" },\n  ]);\n  return (\n    <>\n      <Menu mode=\"horizontal\">\n        {nav.map(({ name, path }, index) => {\n          return (\n            <Menu.Item key={index}>\n              <Link to={path}>{name}</Link>\n            </Menu.Item>\n          );\n        })}\n      </Menu>\n      {props.children}\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const Home = (props) => {\n  return (\n    <>\n      <p>Home page</p>\n    </>\n  );\n};\n","import React from \"react\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport { Todo } from \"./routes/Todo/Todo\";\nimport { Navbar } from \"./routes/Navbar/Navbar\";\nimport { Home } from \"./routes/Home/Home\";\n\nconst App = (props) => {\n  return (\n    <>\n      <HashRouter basename=\"/\">\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route path=\"/todo\" element={<Todo />} />\n          <Route path=\"/users\" element={<Home />} />\n          <Route path=\"/account\" element={<Home />} />\n        </Routes>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}