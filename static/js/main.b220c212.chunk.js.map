{"version":3,"sources":["hooks/useFetchdata.js","routes/Todo/Todo.js","routes/Navbar/Navbar.js","routes/Home/Home.js","routes/Users/Users.js","App.js","reportWebVitals.js","index.js"],"names":["useFetchdata","urlApi","operation","url","setUrlApi","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","fetchData","Todo","props","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","userId","get","initialTodoList","todoList","setTodoList","_useState3","_useState4","curentPage","setCurentPage","_useState5","_useState6","perPage","setPerPage","endList","beginList","filter","value","parseInt","react_default","createElement","Fragment","col","span","style","margin","minWidth","list","input","placeholder","onPressEnter","e","defVariable","id","Math","random","title","target","completed","concat","toConsumableArray","handlerAddToTodo","slice","map","item","index","Item","key","listStyle","textDecoration","space","es_checkbox","onChange","todoID","todo","JSON","parse","stringify","handelerTodoChecked","checked","DeleteOutlined","onClick","handlerDeleteTodo","pagination","defaultCurrent","defaultPageSize","total","page","pageSize","handlerChangePagination","Navbar","name","path","nav","menu","mode","selectable","react_router_dom","to","children","Home","Users","initialUsersList","usersList","setUsersList","dataSource","renderItem","Meta","href","username","description","App","basename","Navbar_Navbar","react_router","exact","element","Home_Home","Todo_Todo","Users_Users","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b220c212.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useFetchdata = (operation = \"users\") => {\n  const urlApi = setUrlApi(operation);\n  const [data, setData] = useState([]);\n\n  function setUrlApi(operation) {\n    const url = \"https://jsonplaceholder.typicode.com/\";\n\n    switch (operation) {\n      case \"todo\":\n        return url + \"todos\";\n      case \"users\":\n        return url + \"users\";\n      default:\n        return null;\n    }\n  }\n\n  useEffect(() => {\n    if (!urlApi) return;\n    const fetchData = async () => {\n      const response = await fetch(urlApi);\n      const data = await response.json();\n      setData(data);\n    };\n    fetchData();\n  }, [urlApi]);\n\n  return data;\n};\n","import { Checkbox, List, Col, Input, Pagination, Space } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useFetchdata } from \"../../hooks/useFetchdata\";\n\nexport const Todo = (props) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const userId = searchParams.get(\"userId\") ? searchParams.get(\"userId\") : \"all\";\n  const initialTodoList = useFetchdata(\"todo\");\n  const [todoList, setTodoList] = useState([]);\n  const [curentPage, setCurentPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const endList = curentPage * perPage;\n  const beginList = endList - perPage;\n\n  useEffect(() => {\n    setTodoList(\n      initialTodoList.filter((value) => {\n        if (userId === \"all\") {\n          return true;\n        }\n        else if (value.userId === parseInt(userId)) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n    );\n  }, [initialTodoList, userId]);\n\n  const handelerTodoChecked = (todoID) => {\n    let todo = JSON.parse(JSON.stringify(todoList));\n\n    todo = todo.filter((item) => {\n      if (item.id === todoID) {\n        item.completed = !item.completed;\n      }\n      return item;\n    });\n    setTodoList(todo);\n  };\n\n  const handlerDeleteTodo = (todoID) => {\n    let todo = JSON.parse(JSON.stringify(todoList));\n\n    todo = todo.filter((item) => {\n      if (item.id !== todoID) return true;\n      return false;\n    });\n    setTodoList(todo);\n  };\n\n  const handlerAddToTodo = (e) => {\n    let defVariable = [\n      { id: Math.random(), title: e.target.value, completed: false },\n    ];\n    setTodoList([...defVariable, ...todoList]);\n  };\n\n  const handlerChangePagination = (page, pageSize) => {\n    setCurentPage(page);\n    setPerPage(pageSize);\n  };\n\n  return (\n    <>\n      <Col span={8} style={{ margin: \"0 auto\", minWidth: \"18em\" }}>\n        <h3>{\"userId: \"+userId}</h3>\n        <List>\n          <Input\n            placeholder=\"Добавить todo в список\"\n            onPressEnter={(e) => handlerAddToTodo(e)}\n          />\n          {todoList.slice(beginList, endList).map((item, index) => {\n            return (\n              <List.Item\n                key={index}\n                style={{\n                  listStyle: \"decimal\",\n                  textDecoration: item.completed ? \"line-through\" : \"none\",\n                }}\n              >\n                <Space>\n                  <Checkbox\n                    onChange={() => handelerTodoChecked(item.id)}\n                    checked={item.completed ? true : false}\n                  />\n                  <div style={{ minWidth: \"6em\" }}>{item.title}</div>\n                </Space>\n                <DeleteOutlined onClick={() => handlerDeleteTodo(item.id)} />\n              </List.Item>\n            );\n          })}\n        </List>\n        <Pagination\n          defaultCurrent={curentPage}\n          defaultPageSize={perPage}\n          total={todoList.length}\n          onChange={(page, pageSize) => handlerChangePagination(page, pageSize)}\n        />\n      </Col>\n    </>\n  );\n};\n","import { Menu } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Navbar = (props) => {\n  const [nav, SetNav] = useState([\n    { name: \"Главная\", path: \"/\" },\n    { name: \"Todo List\", path: \"/todo\" },\n    { name: \"Пользователи\", path: \"/users\" },\n    { name: \"Аккаунт\", path: \"/account\" },\n  ]);\n  return (\n    <>\n      <Menu mode=\"horizontal\" selectable={false}>\n        {nav.map(({ name, path }, index) => {\n          return (\n            <Menu.Item key={index}>\n              <Link to={path}>{name}</Link>\n            </Menu.Item>\n          );\n        })}\n      </Menu>\n      {props.children}\n    </>\n  );\n};\n","import { Col } from \"antd\";\nimport React from \"react\";\n\nexport const Home = (props) => {\n  return (\n    <>\n      <Col span={8} style={{margin:\"auto\"}}>\n        <h3>Home page</h3>\n      </Col>\n    </>\n  );\n};\n","import { Col, List } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useFetchdata } from \"../../hooks/useFetchdata\";\n\nexport const Users = (props) => {\n  const initialUsersList = useFetchdata(\"users\");\n  const [usersList, setUsersList] = useState([]);\n\n  useEffect(() => {\n    setUsersList(initialUsersList) \n  }, [initialUsersList]);\n\n  return (\n    <>\n      <Col span={8} style={{ margin: \"0 auto\", minWidth: \"15em\" }}>\n        <h3>Список пользователей</h3>\n        <List\n          dataSource={usersList}\n          renderItem={(item) => (\n            <List.Item key={item.id}>\n              <List.Item.Meta\n                title={\n                  <a href={\"#/todo?userId=\" + item.id}>\n                    {item.username + \"'s todo list\"}\n                  </a>\n                }\n                description={item.name}\n              />\n            </List.Item>\n          )}\n        />\n      </Col>\n    </>\n  );\n};\n","import React from \"react\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport { Todo } from \"./routes/Todo/Todo\";\nimport { Navbar } from \"./routes/Navbar/Navbar\";\nimport { Home } from \"./routes/Home/Home\";\nimport { Users } from \"./routes/Users/Users\";\n\nconst App = (props) => {\n  return (\n    <>\n      <HashRouter basename=\"/\">\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route path=\"/todo\" element={<Todo />} />\n          <Route path=\"/users\" element={<Users />} />\n          <Route path=\"/account\" element={<Home />} />\n        </Routes>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}